---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: lockboxes.lockbox.k8s.cloudflare.com
spec:
  group: lockbox.k8s.cloudflare.com
  names:
    kind: Lockbox
    listKind: LockboxList
    plural: lockboxes
    singular: lockbox
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.template.type
      name: SecretType
      type: string
    - jsonPath: .spec.peer
      name: Peer
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Lockbox is a struct wrapping the LockboxSpec in standard API
          server metadata fields.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of the Lockbox resource.
            properties:
              data:
                additionalProperties:
                  format: byte
                  type: string
                description: Data contains the secret data, encrypted to the Peer's
                  public key. Each key in the data map must consist of alphanumeric
                  characters, '-', '_', or '.'.
                type: object
              namespace:
                description: Namespace stores an encrypted copy of which namespace
                  this Lockbox is locked for, ensuring it cannot be deployed to another
                  namespace under an attacker's control.
                format: byte
                type: string
              peer:
                description: Peer stores the public key that can unlock this Lockbox.
                format: byte
                type: string
              sender:
                description: Sender stores the public key used to lock this Lockbox.
                format: byte
                type: string
              template:
                description: Template defines the structure of the Secret that will
                  be created from this Lockbox.
                properties:
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  type:
                    description: Type is used to facilitate programmatic handling
                      of secret data.
                    type: string
                type: object
            required:
            - data
            - namespace
            - peer
            - sender
            type: object
          status:
            description: Status of the Lockbox. This is set and managed automatically.
            properties:
              conditions:
                description: List of status conditions to indicate the status of a
                  Lockbox.
                items:
                  description: Condition contains condition information for a Lockbox.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime marks when the condition last
                        transitioned from one status to another. This should be when
                        the underlying condition changed. If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A message is the human readable message indicating
                        details about the transition. The field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides explicit classification of Reason
                        code, so that users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      enum:
                      - Error
                      - Warning
                      - Info
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
